// Code generated by swaggo/swag. DO NOT EDIT.

package swaggo

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/agent": {
            "get": {
                "description": "get agents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "agent id. Don't include in request if you don't specify a id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of agents in a page",
                        "name": "number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page sequence number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swaggo.GetAgentListResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "new agents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "New agents",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "enable the agent",
                        "name": "enable",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "agent type id",
                        "name": "type_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the agent",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "whether keep the event forever",
                        "name": "event_forever",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "event max age in timestamp",
                        "name": "event_max_age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "props used by specific agent type in json",
                        "name": "prop_json_str",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swaggo.NewAgentResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete agents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Delete agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "agent id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swaggo.DeleteAgentResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Web-Engineering-XDU_Project-Backend_app_models.AgentDetail": {
            "type": "object",
            "properties": {
                "allow_input": {
                    "type": "boolean"
                },
                "allow_output": {
                    "type": "boolean"
                },
                "create_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "event_forever": {
                    "type": "boolean"
                },
                "event_max_age": {
                    "$ref": "#/definitions/time.Duration"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prop_json_str": {
                    "type": "string"
                },
                "type_id": {
                    "type": "integer"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "swaggo.DeleteAgentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "swaggo.GetAgentListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/swaggo.GetAgentListResponseResult"
                }
            }
        },
        "swaggo.GetAgentListResponseResult": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Web-Engineering-XDU_Project-Backend_app_models.AgentDetail"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "swaggo.NewAgentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/swaggo.NewAgentResponseResult"
                }
            }
        },
        "swaggo.NewAgentResponseResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
