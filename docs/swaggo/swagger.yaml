basePath: /
definitions:
  app_service.setAgentRelationParams:
    properties:
      agentId:
        type: integer
      dsts:
        items:
          type: integer
        type: array
      srcs:
        items:
          type: integer
        type: array
    type: object
  github_com_Web-Engineering-XDU_Project-Backend_app_models.AgentDetail:
    properties:
      allowInput:
        example: false
        type: boolean
      allowOutput:
        example: true
        type: boolean
      createAt:
        example: "2023-04-11T05:07:53+08:00"
        type: string
      description:
        example: I'm a schedule agent
        type: string
      enable:
        example: true
        type: boolean
      eventForever:
        example: false
        type: boolean
      eventMaxAge:
        allOf:
        - $ref: '#/definitions/time.Duration'
        example: 0
      id:
        example: 8848
        type: integer
      name:
        example: 5s timer
        type: string
      propJsonStr:
        example: '{"cron":"*/5 * * * * *"}'
        type: string
      typeId:
        example: 1
        type: integer
      typeName:
        example: Schedule Agent
        type: string
    type: object
  github_com_Web-Engineering-XDU_Project-Backend_app_models.Event:
    properties:
      contentHash:
        example: 47ed5d26b86a7519
        type: string
      createAt:
        example: "2023-04-11T05:07:53+08:00"
        type: string
      deleteAt:
        example: "2023-04-11T06:07:53+08:00"
        type: string
      error:
        example: false
        type: boolean
      id:
        example: 15
        type: integer
      jsonStr:
        example: '{"ip_without_dot":"11125117081","ip":"111.251.170.81","latitude":"25.0504"}'
        type: string
      log:
        example: ""
        type: string
      srcAgentId:
        example: 1145
        type: integer
    type: object
  swaggo.GetAgentListResponse:
    properties:
      code:
        example: 200
        type: integer
      msg:
        example: ok
        type: string
      result:
        $ref: '#/definitions/swaggo.GetAgentListResponseResult'
    type: object
  swaggo.GetAgentListResponseResult:
    properties:
      content:
        items:
          $ref: '#/definitions/github_com_Web-Engineering-XDU_Project-Backend_app_models.AgentDetail'
        type: array
      count:
        type: integer
    type: object
  swaggo.GetEventListResponse:
    properties:
      code:
        example: 200
        type: integer
      msg:
        example: ok
        type: string
      result:
        $ref: '#/definitions/swaggo.GetEventListResponseResult'
    type: object
  swaggo.GetEventListResponseResult:
    properties:
      content:
        items:
          $ref: '#/definitions/github_com_Web-Engineering-XDU_Project-Backend_app_models.Event'
        type: array
      count:
        type: integer
    type: object
  swaggo.NewAgentResponse:
    properties:
      code:
        example: 200
        type: integer
      msg:
        example: ok
        type: string
      result:
        $ref: '#/definitions/swaggo.NewAgentResponseResult'
    type: object
  swaggo.NewAgentResponseResult:
    properties:
      id:
        type: integer
    type: object
  swaggo.StateInfo:
    properties:
      code:
        example: 200
        type: integer
      msg:
        example: ok
        type: string
    type: object
  time.Duration:
    enum:
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: 43.142.105.98:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /agent:
    delete:
      consumes:
      - application/json
      description: delete agents
      parameters:
      - description: agent id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.StateInfo'
      summary: Delete agents
      tags:
      - agents
    get:
      consumes:
      - application/json
      description: get agents
      parameters:
      - description: agent id. Don't include in request if you don't specify a id
        in: query
        name: id
        type: integer
      - description: number of agents in a page
        in: query
        name: number
        required: true
        type: integer
      - description: page sequence number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.GetAgentListResponse'
      summary: List agents
      tags:
      - agents
    post:
      consumes:
      - application/json
      description: update agents
      parameters:
      - description: enable the agent
        in: formData
        name: enable
        required: true
        type: boolean
      - description: name of the agent
        in: formData
        name: name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - description: whether keep the event forever
        in: formData
        name: event_forever
        required: true
        type: boolean
      - description: event max age in timestamp
        in: formData
        name: event_max_age
        required: true
        type: integer
      - description: props used by specific agent type in json
        in: formData
        name: prop_json_str
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.StateInfo'
      summary: Update agents
      tags:
      - agents
    put:
      consumes:
      - application/json
      description: new agents
      parameters:
      - description: enable the agent
        in: formData
        name: enable
        required: true
        type: boolean
      - description: agent type id
        in: formData
        name: type_id
        required: true
        type: integer
      - description: name of the agent
        in: formData
        name: name
        required: true
        type: string
      - description: description
        in: formData
        name: description
        required: true
        type: string
      - description: whether keep the event forever
        in: formData
        name: event_forever
        required: true
        type: boolean
      - description: event max age in nanosecond count
        in: formData
        name: event_max_age
        required: true
        type: integer
      - description: props used by specific agent type in json
        in: formData
        name: prop_json_str
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.NewAgentResponse'
      summary: New agents
      tags:
      - agents
  /agent-relation:
    post:
      consumes:
      - application/json
      description: set agent relations
      parameters:
      - description: all relations of an agent
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_service.setAgentRelationParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.GetEventListResponse'
      summary: Set Agent Relations
      tags:
      - relations
  /event:
    get:
      consumes:
      - application/json
      description: get events
      parameters:
      - description: src agent id. Don't include in request if you don't specify it
        in: query
        name: id
        type: integer
      - description: number of events in a page
        in: query
        name: number
        required: true
        type: integer
      - description: page sequence number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swaggo.GetEventListResponse'
      summary: List Events
      tags:
      - events
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
